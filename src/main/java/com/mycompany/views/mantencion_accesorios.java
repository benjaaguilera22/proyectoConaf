package com.mycompany.views;

import com.mycompany.ilib.DAOEquipo_implem;
import com.mycompany.ilib.DAOaccesorio_imple;
import com.mycompany.ilib.DAOmantenciones_imple;
import com.mycompany.interfaces.DAOaccesorio;
import com.mycompany.interfaces.DAOequipo;
import com.mycompany.interfaces.DAOmantenciones;
import com.mycompany.models.Accesorio;
import com.mycompany.models.Equipo;
import com.mycompany.models.mantenciones;
import javax.swing.JOptionPane;

public class mantencion_accesorios extends javax.swing.JPanel {

        boolean isEdition = false;
        com.mycompany.models.Accesorio userEdition;
        private String serie_equipo;

        
    public mantencion_accesorios () {
        initComponents();
        InitStyles();
         
    }
    private void cargarDatosEquipo() {
        try {
            // Obtener el objeto Equipo basado en la serie del equipo
            DAOequipo daoEquipo = new DAOEquipo_implem();
            Equipo equipo = daoEquipo.getusuariobyserie(serie_equipo);

            // Verificar si se encontró el equipo
            if (equipo != null) {
                // Poblar los campos del formulario con los datos del equipo
                modeloL.setText(equipo.getNombre_modelo_id());
                serie_L.setText(equipo.getSerie_equipo());
                // Otros campos según sea necesario

                // Puedes también deshabilitar la edición de ciertos campos si es necesario
                serie_L.setEnabled(false);
                modeloL.setEnabled(false);

                // Realizar otras acciones necesarias
            } else {
                // Manejar el caso en que no se encuentra el equipo
                System.out.println("No se encontró el equipo con serie: " + serie_equipo);
            }
        } catch (Exception e) {
            // Manejar excepciones
            e.printStackTrace();
        }
    }
    // Constructor que acepta el número de serie como parámetro
    public mantencion_accesorios(String serieEquipo) {
        this(); // Llama al constructor por defecto para realizar la inicialización común
        this.serie_equipo = serieEquipo;
        cargarDatosEquipo();
        // Otro código de inicialización, si es necesario
    }
    

    public mantencion_accesorios (com.mycompany.models.Accesorio accesorios) {
        initComponents();
        isEdition = true;
        userEdition = accesorios;
        InitStyles();
    }

    private void InitStyles() {
        
        
        try {
            DAOaccesorio daoAccesorio = new DAOaccesorio_imple();

            // Bateria
            Accesorio bateriaAccesorio = daoAccesorio.getaccesorio("bateria");
            bateria_L.setText(String.valueOf(bateriaAccesorio.getStock_accesorio()));

            // Antena
            Accesorio antenaAccesorio = daoAccesorio.getaccesorio("Antena");
            Antena_L.setText(String.valueOf(antenaAccesorio.getStock_accesorio()));

            // Cargador
            Accesorio cargadorAccesorio = daoAccesorio.getaccesorio("cargador");
            cargador_L.setText(String.valueOf(cargadorAccesorio.getStock_accesorio()));

            // Transformador
            Accesorio transAccesorio = daoAccesorio.getaccesorio("transformador");
            trans_L.setText(String.valueOf(transAccesorio.getStock_accesorio()));

            // Clip Cinturón
            Accesorio clipAccesorio = daoAccesorio.getaccesorio("clip cinturon");
            clip_L.setText(String.valueOf(clipAccesorio.getStock_accesorio()));

            // Tapa Pines
            Accesorio tapaAccesorio = daoAccesorio.getaccesorio("tapa pines");
            tapa_L.setText(String.valueOf(tapaAccesorio.getStock_accesorio()));

            // Bateria Respaldo
            Accesorio bRespAccesorio = daoAccesorio.getaccesorio("bateria respaldo");
            Brespaldo_L.setText(String.valueOf(bRespAccesorio.getStock_accesorio()));

            // Micrófono Parlante
            Accesorio micAccesorio = daoAccesorio.getaccesorio("microfono parlante");
            mic_L.setText(String.valueOf(micAccesorio.getStock_accesorio()));

        } catch (Exception e) {
            // Manejo de excepciones (puedes imprimir o mostrar un mensaje de error)
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        modeloL = new javax.swing.JTextField();
        apPLbl = new javax.swing.JLabel();
        serie_L = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bateria_L = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Antena_L = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cargador_L = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        trans_L = new javax.swing.JTextField();
        clip_L = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tapa_L = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Brespaldo_L = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        mic_L = new javax.swing.JTextField();
        bateria_S = new javax.swing.JSpinner();
        antena_S = new javax.swing.JSpinner();
        cargador_S = new javax.swing.JSpinner();
        trans_S = new javax.swing.JSpinner();
        clip_S = new javax.swing.JSpinner();
        tapa_S = new javax.swing.JSpinner();
        bate_S = new javax.swing.JSpinner();
        mic_S = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        comentario_t = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        bg.setBackground(new java.awt.Color(255, 255, 255));

        title.setText("Mantencion Accesorios");

        nameLbl.setText("Modelo");

        modeloL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeloLActionPerformed(evt);
            }
        });

        apPLbl.setText("Serie Equipo");

        serie_L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serie_LActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(200, 10));

        button.setBackground(new java.awt.Color(0, 153, 51));
        button.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        button.setForeground(new java.awt.Color(255, 255, 255));
        button.setText("Guardar");
        button.setBorderPainted(false);
        button.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        jLabel1.setText("Bateria");

        bateria_L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bateria_LActionPerformed(evt);
            }
        });

        jLabel2.setText("Clip cinturon");

        jLabel3.setText("Antena");

        Antena_L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Antena_LActionPerformed(evt);
            }
        });

        jLabel4.setText("Cargador");

        cargador_L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargador_LActionPerformed(evt);
            }
        });

        jLabel5.setText("Transformador");

        trans_L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trans_LActionPerformed(evt);
            }
        });

        jLabel6.setText("Tapa pines");

        jLabel7.setText("Bateria Respaldo");

        Brespaldo_L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Brespaldo_LActionPerformed(evt);
            }
        });

        jLabel9.setText("Microfono parlante");

        comentario_t.setColumns(20);
        comentario_t.setRows(5);
        jScrollPane1.setViewportView(comentario_t);

        jLabel10.setText("Ingrese Comentario");

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(553, 553, 553))
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(406, 406, 406))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(591, 591, 591))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(clip_L, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clip_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(modeloL, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cargador_L)
                                            .addComponent(bateria_L, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bateria_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cargador_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(84, 84, 84))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(nameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(82, 82, 82))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(237, 237, 237)))
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(86, 86, 86))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(serie_L)
                                            .addGroup(bgLayout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addComponent(apPLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(tapa_L))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(Brespaldo_L)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(139, 139, 139)))))
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tapa_S, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mic_L, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(Antena_L, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(antena_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(trans_L, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(trans_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bate_S, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mic_S, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)
                        .addGap(57, 57, 57))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(240, 240, 240))))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(106, 106, 106))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(58, 58, 58))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(apPLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(serie_L, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(modeloL, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(4, 4, 4)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bateria_L, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tapa_L, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bateria_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tapa_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE))
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Brespaldo_L, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Antena_L, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(antena_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bate_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cargador_L, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cargador_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(bgLayout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                                        .addGap(26, 26, 26)))
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mic_L, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mic_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(26, 26, 26)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(trans_L, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(trans_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(clip_L, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(clip_S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)
                        .addGap(252, 252, 252))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cargador_LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargador_LActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargador_LActionPerformed

    private void bateria_LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bateria_LActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bateria_LActionPerformed

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        try {
        DAOaccesorio daoAccesorio = new DAOaccesorio_imple();
        DAOmantenciones daoMantenciones = new DAOmantenciones_imple();

        // Actualizar stock de accesorios

        // Batería
        Accesorio bateriaAccesorio = daoAccesorio.getaccesorio("BATERIA");
        int nuevoStockBateria = bateriaAccesorio.getStock_accesorio() - (int) bateria_S.getValue();
        if (nuevoStockBateria >= 0) {
            bateriaAccesorio.setStock_accesorio(nuevoStockBateria);
            daoAccesorio.modificar(bateriaAccesorio);
        } else {
            System.out.println("Error: No hay suficientes existencias de Batería.");
            // Puedes mostrar un mensaje al usuario indicando que no hay suficientes existencias.
        }

        // Antena
        Accesorio antenaAccesorio = daoAccesorio.getaccesorio("ANTENA");
        int nuevoStockAntena = antenaAccesorio.getStock_accesorio() - (int) antena_S.getValue();
        if (nuevoStockAntena >= 0) {
            antenaAccesorio.setStock_accesorio(nuevoStockAntena);
            daoAccesorio.modificar(antenaAccesorio);
        } else {
            System.out.println("Error: No hay suficientes existencias de Antena.");
            // Puedes mostrar un mensaje al usuario indicando que no hay suficientes existencias.
        }

        // Cargador
        Accesorio cargadorAccesorio = daoAccesorio.getaccesorio("CARGADOR");
        int nuevoStockCargador = cargadorAccesorio.getStock_accesorio() - (int) cargador_S.getValue();
        if (nuevoStockCargador >= 0) {
            cargadorAccesorio.setStock_accesorio(nuevoStockCargador);
            daoAccesorio.modificar(cargadorAccesorio);
        } else {
            System.out.println("Error: No hay suficientes existencias de Cargador.");
            // Puedes mostrar un mensaje al usuario indicando que no hay suficientes existencias.
        }

        // Transformador
        Accesorio transAccesorio = daoAccesorio.getaccesorio("TRANSFORMADOR");
        int nuevoStockTrans = transAccesorio.getStock_accesorio() - (int) trans_S.getValue();
        if (nuevoStockTrans >= 0) {
            transAccesorio.setStock_accesorio(nuevoStockTrans);
            daoAccesorio.modificar(transAccesorio);
        } else {
            System.out.println("Error: No hay suficientes existencias de Transformador.");
            // Puedes mostrar un mensaje al usuario indicando que no hay suficientes existencias.
        }

        // Clip Cinturón
        Accesorio clipAccesorio = daoAccesorio.getaccesorio("CLIP CINTURON");
        int nuevoStockClip = clipAccesorio.getStock_accesorio() - (int) clip_S.getValue();
        if (nuevoStockClip >= 0) {
            clipAccesorio.setStock_accesorio(nuevoStockClip);
            daoAccesorio.modificar(clipAccesorio);
        } else {
            System.out.println("Error: No hay suficientes existencias de Clip Cinturón.");
            // Puedes mostrar un mensaje al usuario indicando que no hay suficientes existencias.
        }

        // Tapa Pines
        Accesorio tapaAccesorio = daoAccesorio.getaccesorio("TAPA PINES");
        int nuevoStockTapa = tapaAccesorio.getStock_accesorio() - (int) tapa_S.getValue();
        if (nuevoStockTapa >= 0) {
            tapaAccesorio.setStock_accesorio(nuevoStockTapa);
            daoAccesorio.modificar(tapaAccesorio);
        } else {
            System.out.println("Error: No hay suficientes existencias de Tapa Pines.");
            // Puedes mostrar un mensaje al usuario indicando que no hay suficientes existencias.
        }

        // Batería Respaldo
        Accesorio bRespaldoAccesorio = daoAccesorio.getaccesorio("BATERIA RESPALDO");
        int nuevoStockBRespaldo = bRespaldoAccesorio.getStock_accesorio() - (int) bate_S.getValue();
        if (nuevoStockBRespaldo >= 0) {
            bRespaldoAccesorio.setStock_accesorio(nuevoStockBRespaldo);
            daoAccesorio.modificar(bRespaldoAccesorio);
        } else {
            System.out.println("Error: No hay suficientes existencias de Batería Respaldo.");
            // Puedes mostrar un mensaje al usuario indicando que no hay suficientes existencias.
        }

        // Micrófono Parlante
        Accesorio micAccesorio = daoAccesorio.getaccesorio("MICROFONO PARLANTE");
        int nuevoStockMic = micAccesorio.getStock_accesorio() - (int) mic_S.getValue();
        if (nuevoStockMic >= 0) {
            micAccesorio.setStock_accesorio(nuevoStockMic);
            daoAccesorio.modificar(micAccesorio);
        } else {
            System.out.println("Error: No hay suficientes existencias de Micrófono Parlante.");
            // Puedes mostrar un mensaje al usuario indicando que no hay suficientes existencias.
        }

        // Guardar mantención
        String serieEquipo = serie_L.getText(); // Obtener serie del equipo
        String comentario = comentario_t.getText(); // Obtener comentario

        // Obtener la fecha actual
        java.util.Date fechaActual = new java.util.Date();
        java.sql.Timestamp fechaMantencion = new java.sql.Timestamp(fechaActual.getTime());

        // Crear objeto de mantenciones y asignar valores
        mantenciones mantencion = new mantenciones();
        mantencion.setSerie_equipo(serieEquipo);
        mantencion.setFecha_mantencion(fechaMantencion.toString());
        mantencion.setComentario(comentario);

        // Registrar la mantención en la base de datos
        daoMantenciones.registrar(mantencion);

        // Mostrar mensaje de éxito
        JOptionPane.showMessageDialog(this, "Mantención registrada correctamente. Comentario: " + comentario);
    } catch (Exception e) {
        // Manejo de excepciones
        e.printStackTrace();
        // Mostrar mensaje de error
        JOptionPane.showMessageDialog(this, "Error al registrar la mantención.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_buttonActionPerformed

    private void serie_LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serie_LActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serie_LActionPerformed

    private void modeloLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeloLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modeloLActionPerformed

    private void Brespaldo_LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Brespaldo_LActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Brespaldo_LActionPerformed

    private void Antena_LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Antena_LActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Antena_LActionPerformed

    private void trans_LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trans_LActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trans_LActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Antena_L;
    private javax.swing.JTextField Brespaldo_L;
    private javax.swing.JSpinner antena_S;
    private javax.swing.JLabel apPLbl;
    private javax.swing.JSpinner bate_S;
    private javax.swing.JTextField bateria_L;
    private javax.swing.JSpinner bateria_S;
    private javax.swing.JPanel bg;
    private javax.swing.JButton button;
    private javax.swing.JTextField cargador_L;
    private javax.swing.JSpinner cargador_S;
    private javax.swing.JTextField clip_L;
    private javax.swing.JSpinner clip_S;
    private javax.swing.JTextArea comentario_t;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField mic_L;
    private javax.swing.JSpinner mic_S;
    private javax.swing.JTextField modeloL;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField serie_L;
    private javax.swing.JTextField tapa_L;
    private javax.swing.JSpinner tapa_S;
    private javax.swing.JLabel title;
    private javax.swing.JTextField trans_L;
    private javax.swing.JSpinner trans_S;
    // End of variables declaration//GEN-END:variables

}